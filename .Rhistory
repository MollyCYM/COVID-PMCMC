}
sub observation {
y ~ log_normal(log(max(Z/5, 0)), tau)
}
sub proposal_parameter {
k ~ truncated_gaussian(k, 0.001, lower = 0)
gamma ~ truncated_gaussian(gamma, 0.001, lower = 0)
sigma ~ truncated_gaussian(sigma, 0.001, lower = 0)
theta ~ truncated_gaussian(theta, 0.001, lower = 0)
E0 ~ gaussian(E0, 0.05)
I0 ~ gaussian(I0, 0.05)
R0 ~ gaussian(R0, 0.05)
tau ~ gaussian(tau, 0.05)
a ~ gaussian(a, 0.01)
b ~ gaussian(b, 0.01)
}
}"
model <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])%>%
fix(lock = Forcing$value)
bi_model <- libbi(model)
rewrite(bi_model)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
# Load the data
v <- read.csv("H1N1OU_wk.csv", header=FALSE, stringsAsFactors=FALSE) %>%
rowSums()
y <- data.frame(value = v) %>%
mutate(time = seq(7, by = 7, length.out = n())) %>%
dplyr::select(time, value)
L <- read.csv("Forcing.csv", header=FALSE, stringsAsFactors=FALSE)
Forcing <- data.frame(value = L) %>%
mutate(time = seq(1, by = 1, length.out = n())) %>%
dplyr::select(time,V1 )
colnames(Forcing) <- c("time","value")
ncores <- 8
minParticles <- max(ncores, 16)
model_str <- "
model dureau {
obs y
const lock
state S
state E
state I
state R
state mu
state x
state Z
input N
param k
param gamma
param sigma // Noise driver
param theta
param a
param b
param E0
param I0
param R0
param tau
sub parameter {
k ~ truncated_gaussian(7, 0.1, lower = 0) // k is the period here, not the rate, i.e. 1/k is the rate
gamma ~ truncated_gaussian(5, 0.1, lower = 0) // gamma is the period, not the rate
sigma ~ truncated_gaussian(sqrt(0.004), 0.0001, lower = 0)
theta ~ truncated_gaussian(0.05, 0.001, lower = 0)
I0 ~ uniform(-16, -9)
E0 ~ uniform(-16, -9)
R0 ~ truncated_gaussian(0.15, 0.15, lower = 0, upper = 1)
tau ~ uniform(0, 1)
a ~ gaussian(-0.02, 0.01)
b ~ gaussian(-0.2, 0.01)
}
sub initial {
S <- N
R <- R0*S
S <- S - R
E <- exp(E0 + log(S))
S <- S - E
I <- exp(I0 + log(S))
S <- S - I
x <- log(0.8)
mu <- 0
Z <- 0
}
sub transition(delta = 1) {
Z <- ((t_now) % 7 == 0 ? 0 : Z)
noise e
e ~ wiener()
mu <- a+b*lock
ode(alg = 'RK4(3)', h = 1.0, atoler = 1.0e-3, rtoler = 1.0e-8) {
dx/dt = theta*(mu-x)+sigma*e
dS/dt = -exp(x)*S*I/N
dE/dt = exp(x)*S*I/N - E/k
dI/dt = E/k-I/gamma
dR/dt = I/gamma
dZ/dt = E/k
}
}
sub observation {
y ~ log_normal(log(max(Z/5, 0)), tau)
}
sub proposal_parameter {
k ~ truncated_gaussian(k, 0.001, lower = 0)
gamma ~ truncated_gaussian(gamma, 0.001, lower = 0)
sigma ~ truncated_gaussian(sigma, 0.001, lower = 0)
theta ~ truncated_gaussian(theta, 0.001, lower = 0)
E0 ~ gaussian(E0, 0.05)
I0 ~ gaussian(I0, 0.05)
R0 ~ gaussian(R0, 0.05)
tau ~ gaussian(tau, 0.05)
a ~ gaussian(a, 0.01)
b ~ gaussian(b, 0.01)
}
}"
model <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])%>%
fix(lock = Forcing$value)
bi_model <- libbi(model)
rewrite(bi_model)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
# Load the data
v <- read.csv("H1N1OU_wk.csv", header=FALSE, stringsAsFactors=FALSE) %>%
rowSums()
y <- data.frame(value = v) %>%
mutate(time = seq(7, by = 7, length.out = n())) %>%
dplyr::select(time, value)
L <- read.csv("Forcing.csv", header=FALSE, stringsAsFactors=FALSE)
Forcing <- data.frame(value = L) %>%
mutate(time = seq(1, by = 1, length.out = n())) %>%
dplyr::select(time,V1 )
colnames(Forcing) <- c("time","value")
ncores <- 8
minParticles <- max(ncores, 16)
model_str <- "
model dureau {
obs y
state S
state E
state I
state R
state mu
state x
state Z
input N
input Forcing
param k
param gamma
param sigma // Noise driver
param theta
param a
param b
param E0
param I0
param R0
param tau
sub parameter {
k ~ truncated_gaussian(7, 0.1, lower = 0) // k is the period here, not the rate, i.e. 1/k is the rate
gamma ~ truncated_gaussian(5, 0.1, lower = 0) // gamma is the period, not the rate
sigma ~ truncated_gaussian(sqrt(0.004), 0.0001, lower = 0)
theta ~ truncated_gaussian(0.05, 0.001, lower = 0)
I0 ~ uniform(-16, -9)
E0 ~ uniform(-16, -9)
R0 ~ truncated_gaussian(0.15, 0.15, lower = 0, upper = 1)
tau ~ uniform(0, 1)
a ~ gaussian(-0.02, 0.01)
b ~ gaussian(-0.2, 0.01)
}
sub initial {
S <- N
R <- R0*S
S <- S - R
E <- exp(E0 + log(S))
S <- S - E
I <- exp(I0 + log(S))
S <- S - I
x <- log(0.8)
Z <- 0
}
sub transition(delta = 1) {
Z <- ((t_now) % 7 == 0 ? 0 : Z)
noise e
e ~ wiener()
mu <- a+b*Forcing
ode(alg = 'RK4(3)', h = 1.0, atoler = 1.0e-3, rtoler = 1.0e-8) {
dx/dt = theta*(mu-x)+sigma*e
dS/dt = -exp(x)*S*I/N
dE/dt = exp(x)*S*I/N - E/k
dI/dt = E/k-I/gamma
dR/dt = I/gamma
dZ/dt = E/k
}
}
sub observation {
y ~ log_normal(log(max(Z/5, 0)), tau)
}
sub proposal_parameter {
k ~ truncated_gaussian(k, 0.001, lower = 0)
gamma ~ truncated_gaussian(gamma, 0.001, lower = 0)
sigma ~ truncated_gaussian(sigma, 0.001, lower = 0)
theta ~ truncated_gaussian(theta, 0.001, lower = 0)
E0 ~ gaussian(E0, 0.05)
I0 ~ gaussian(I0, 0.05)
R0 ~ gaussian(R0, 0.05)
tau ~ gaussian(tau, 0.05)
a ~ gaussian(a, 0.01)
b ~ gaussian(b, 0.01)
}
}"
model <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
bi_model <- libbi(model)
rewrite(bi_model)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
# Load the data
v <- read.csv("H1N1OU_wk.csv", header=FALSE, stringsAsFactors=FALSE) %>%
rowSums()
y <- data.frame(value = v) %>%
mutate(time = seq(7, by = 7, length.out = n())) %>%
dplyr::select(time, value)
L <- read.csv("Forcing.csv", header=FALSE, stringsAsFactors=FALSE)
Forcing <- data.frame(value = L) %>%
mutate(time = seq(1, by = 1, length.out = n())) %>%
dplyr::select(time,V1 )
colnames(Forcing) <- c("time","value")
ncores <- 8
minParticles <- max(ncores, 16)
model_str <- "
model dureau {
obs y
state S
state E
state I
state R
state mu
state x
state Z
input N
param k
param gamma
param sigma // Noise driver
param theta
param a
param b
param E0
param I0
param R0
param tau
param Forcing
sub parameter {
k ~ truncated_gaussian(7, 0.1, lower = 0) // k is the period here, not the rate, i.e. 1/k is the rate
gamma ~ truncated_gaussian(5, 0.1, lower = 0) // gamma is the period, not the rate
sigma ~ truncated_gaussian(sqrt(0.004), 0.0001, lower = 0)
theta ~ truncated_gaussian(0.05, 0.001, lower = 0)
I0 ~ uniform(-16, -9)
E0 ~ uniform(-16, -9)
R0 ~ truncated_gaussian(0.15, 0.15, lower = 0, upper = 1)
tau ~ uniform(0, 1)
a ~ gaussian(-0.02, 0.01)
b ~ gaussian(-0.2, 0.01)
}
sub initial {
S <- N
R <- R0*S
S <- S - R
E <- exp(E0 + log(S))
S <- S - E
I <- exp(I0 + log(S))
S <- S - I
x <- log(0.8)
mu <- 0
Z <- 0
}
sub transition(delta = 1) {
Z <- ((t_now) % 7 == 0 ? 0 : Z)
noise e
e ~ wiener()
mu <- a+b*Forcing
ode(alg = 'RK4(3)', h = 1.0, atoler = 1.0e-3, rtoler = 1.0e-8) {
dx/dt = theta*(mu-x)+sigma*e
dS/dt = -exp(x)*S*I/N
dE/dt = exp(x)*S*I/N - E/k
dI/dt = E/k-I/gamma
dR/dt = I/gamma
dZ/dt = E/k
}
}
sub observation {
y ~ log_normal(log(max(Z/5, 0)), tau)
}
sub proposal_parameter {
k ~ truncated_gaussian(k, 0.001, lower = 0)
gamma ~ truncated_gaussian(gamma, 0.001, lower = 0)
sigma ~ truncated_gaussian(sigma, 0.001, lower = 0)
theta ~ truncated_gaussian(theta, 0.001, lower = 0)
E0 ~ gaussian(E0, 0.05)
I0 ~ gaussian(I0, 0.05)
R0 ~ gaussian(R0, 0.05)
tau ~ gaussian(tau, 0.05)
a ~ gaussian(a, 0.01)
b ~ gaussian(b, 0.01)
}
}"
model <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
bi_model <- libbi(model)
rewrite(bi_model)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
# Load the data
v <- read.csv("H1N1OU_wk.csv", header=FALSE, stringsAsFactors=FALSE) %>%
rowSums()
y <- data.frame(value = v) %>%
mutate(time = seq(7, by = 7, length.out = n())) %>%
dplyr::select(time, value)
L <- read.csv("Forcing.csv", header=FALSE, stringsAsFactors=FALSE)
Forcing <- data.frame(value = L) %>%
mutate(time = seq(1, by = 1, length.out = n())) %>%
dplyr::select(time,V1 )
colnames(Forcing) <- c("time","value")
Forcing <- Forcing$value
ncores <- 8
minParticles <- max(ncores, 16)
model_str <- "
model dureau {
obs y
state S
state E
state I
state R
state mu
state x
state Z
input N
param k
param gamma
param sigma // Noise driver
param theta
param a
param b
param E0
param I0
param R0
param tau
param Forcing
sub parameter {
k ~ truncated_gaussian(7, 0.1, lower = 0) // k is the period here, not the rate, i.e. 1/k is the rate
gamma ~ truncated_gaussian(5, 0.1, lower = 0) // gamma is the period, not the rate
sigma ~ truncated_gaussian(sqrt(0.004), 0.0001, lower = 0)
theta ~ truncated_gaussian(0.05, 0.001, lower = 0)
I0 ~ uniform(-16, -9)
E0 ~ uniform(-16, -9)
R0 ~ truncated_gaussian(0.15, 0.15, lower = 0, upper = 1)
tau ~ uniform(0, 1)
a ~ gaussian(-0.02, 0.01)
b ~ gaussian(-0.2, 0.01)
}
sub initial {
S <- N
R <- R0*S
S <- S - R
E <- exp(E0 + log(S))
S <- S - E
I <- exp(I0 + log(S))
S <- S - I
x <- log(0.8)
mu <- 0
Z <- 0
}
sub transition(delta = 1) {
Z <- ((t_now) % 7 == 0 ? 0 : Z)
noise e
e ~ wiener()
mu <- a+b*Forcing
ode(alg = 'RK4(3)', h = 1.0, atoler = 1.0e-3, rtoler = 1.0e-8) {
dx/dt = theta*(mu-x)+sigma*e
dS/dt = -exp(x)*S*I/N
dE/dt = exp(x)*S*I/N - E/k
dI/dt = E/k-I/gamma
dR/dt = I/gamma
dZ/dt = E/k
}
}
sub observation {
y ~ log_normal(log(max(Z/5, 0)), tau)
}
sub proposal_parameter {
k ~ truncated_gaussian(k, 0.001, lower = 0)
gamma ~ truncated_gaussian(gamma, 0.001, lower = 0)
sigma ~ truncated_gaussian(sigma, 0.001, lower = 0)
theta ~ truncated_gaussian(theta, 0.001, lower = 0)
E0 ~ gaussian(E0, 0.05)
I0 ~ gaussian(I0, 0.05)
R0 ~ gaussian(R0, 0.05)
tau ~ gaussian(tau, 0.05)
a ~ gaussian(a, 0.01)
b ~ gaussian(b, 0.01)
}
}"
model <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
bi_model <- libbi(model)
rewrite(bi_model)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
# Load the data
v <- read.csv("covidbm_weekly.csv", header=FALSE, stringsAsFactors=FALSE) %>%
rowSums()
y <- data.frame(value = v) %>%
mutate(time = seq(7, by = 7, length.out = n())) %>%
dplyr::select(time, value)
ncores <- 8
minParticles <- max(ncores, 16)
model_str <- "
model dureau {
obs y
state S
state E
state I
state R
state x
state Z
input N
param k
param gamma
param sigma // Noise driver
param E0
param I0
param R0
param x0
param tau
sub parameter {
k ~ truncated_gaussian(7, 0.1, lower = 0) // k is the period here, not the rate, i.e. 1/k is the rate
gamma ~ truncated_gaussian(5, 0.1, lower = 0) // gamma is the period, not the rate
sigma ~ uniform(0,1)
x0 ~ uniform(-5,2)
I0 ~ uniform(-16, -9)
E0 ~ uniform(-16, -9)
R0 ~ truncated_gaussian(0.15, 0.15, lower = 0, upper = 1)
tau ~ uniform(0, 1)
}
sub initial {
S <- N
R <- R0*S
S <- S - R
E <- exp(E0 + log(S))
S <- S - E
I <- exp(I0 + log(S))
S <- S - I
x <- x0
Z <- 0
}
sub transition(delta = 1) {
Z <- ((t_now) % 7 == 0 ? 0 : Z)
noise e
e ~ wiener()
ode(alg = 'RK4(3)', h = 1.0, atoler = 1.0e-3, rtoler = 1.0e-8) {
dx/dt = sigma*e
dS/dt = -exp(x)*S*(0.1*I+E)/N
dE/dt = exp(x)*S*(0.1*I+E)/N - E*(1/k+1/gamma)
dI/dt = E/k-I*(1/gamma+0.0087)
dR/dt = (I+E)/gamma+0.0087*I
dZ/dt = E/k
}
}
sub observation {
y ~ log_normal(log(max(Z/5, 0)), tau)
}
sub proposal_parameter {
k ~ gaussian(k, 0.005)
sigma ~ gaussian(sigma, 0.01)
gamma ~ gaussian(gamma, 0.01)
x0 ~ gaussian(x0, 0.05)
E0 ~ gaussian(E0, 0.05)
I0 ~ gaussian(I0, 0.05)
R0 ~ gaussian(R0, 0.05)
tau ~ gaussian(tau, 0.05)
}
}"
model <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
bi_model <- libbi(model)
rewrite(bi_model)
