const rho = 45.92
const beta = 4.0
const alpha = 16.0
state X, Y, Z
obs X_obs
sub initial {
X ~ log_normal(log(1.0), 0.00002)
Y ~ log_normal(log(1.0), 0.00002)
Z ~ log_normal(log(1.0), 0.00002)
}
sub transition(delta = 0.0001) {
ode {
dX/dt = alpha * (Y - X)
dY/dt = X * (rho - Z) - Y
dZ/dt = X * Y - beta * Z
}
}
sub observation {
X_obs ~ normal(X, 0.2)
}
}
"
Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
Lorenz <- libbi(Lorenz)
T <- 0.2
nObs <- 100
init_parameters <- list(X = 1, Y = 1, Z = 1)
synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,
init=init_parameters,
noutputs = nObs)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
model_str <- "
model Lorenz {
const rho = 45.92
const beta = 4.0
const alpha = 16.0
state X, Y, Z
obs X_obs
sub initial {
X ~ log_normal(log(1.0), 0.00002)
Y ~ log_normal(log(1.0), 0.00002)
Z ~ log_normal(log(1.0), 0.00002)
}
sub transition(delta = 0.0001) {
ode {
dX/dt = alpha * (Y - X)
dY/dt = X * (rho - Z) - Y
dZ/dt = X * Y - beta * Z
}
}
sub observation {
X_obs ~ normal(X, 0.2)
}
}
"
# Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
# Lorenz <- libbi(Lorenz)
#
# T <- 0.2
# nObs <- 100
# init_parameters <- list(X = 1, Y = 1, Z = 1)
#
#
# synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,
#                                          init=init_parameters,
#                                          noutputs = nObs)
Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
T <- 0.2
nObs <- 100
init_parameters <- list(X = 1, Y = 1, Z = 1)
bi <- libbi(model=Lorenz, end_time=T)
sim <- rbi::simulate(bi, init=init_parameters, nsamples=1)
sim_res <- bi_read(sim)
View(sim_res)
ggplot(sim_res$X_obs, aes(x=time, group=np))+
geom_line(aes(y=value)) +
ylab("R1")
synthetic_df <- as.data.frame(sim_res)
View(synthetic_df)
ggplot(synthetic_df, aes(X.time)) +
geom_path(aes(y = X.value, colour="X.value")) +
geom_path(aes(y = X_obs.value, colour="X_obs.value")) +
theme(legend.position="bottom") +
ggtitle("Lorenz") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Time") +
ylab("Value")
View(synthetic_df)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
model_str <- "
model Lorenz {
const rho = 45.92
const beta = 4.0
const alpha = 16.0
state X, Y, Z
obs X_obs
sub initial {
X ~ log_normal(log(1.0), 0.00002)
Y ~ log_normal(log(1.0), 0.00002)
Z ~ log_normal(log(1.0), 0.00002)
}
sub transition(delta = 0.0001) {
ode {
dX/dt = alpha * (Y - X)
dY/dt = X * (rho - Z) - Y
dZ/dt = X * Y - beta * Z
}
}
sub observation {
X_obs ~ normal(X, 0.2)
}
}
"
# Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
# Lorenz <- libbi(Lorenz)
#
# T <- 0.2
# nObs <- 100
# init_parameters <- list(X = 1, Y = 1, Z = 1)
#
#
# synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,
#                                          init=init_parameters,
#                                          noutputs = nObs)
Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
T <- 0.2
nObs <- 100
init_parameters <- list(X = 1, Y = 1, Z = 1)
bi <- libbi(model=Lorenz, end_time=T)
sim <- rbi::simulate(bi, init=init_parameters, nsamples=100)
sim_res <- bi_read(sim)
synthetic_df <- as.data.frame(sim_res)
View(synthetic_df)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
model_str <- "
model Lorenz {
const rho = 45.92
const beta = 4.0
const alpha = 16.0
state X, Y, Z
obs X_obs
sub initial {
X ~ log_normal(log(1.0), 0.00002)
Y ~ log_normal(log(1.0), 0.00002)
Z ~ log_normal(log(1.0), 0.00002)
}
sub transition(delta = 0.0001) {
ode {
dX/dt = alpha * (Y - X)
dY/dt = X * (rho - Z) - Y
dZ/dt = X * Y - beta * Z
}
}
sub observation {
X_obs ~ normal(X, 0.2)
}
}
"
# Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
# Lorenz <- libbi(Lorenz)
#
# T <- 0.2
# nObs <- 100
# init_parameters <- list(X = 1, Y = 1, Z = 1)
#
#
# synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,
#                                          init=init_parameters,
#                                          noutputs = nObs)
Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
T <- 0.2
nObs <- 100
init_parameters <- list(X = 1, Y = 1, Z = 1)
bi <- libbi(model=Lorenz, end_time=T)
synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,
init=init_parameters,
noutputs = nObs)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
model_str <- "
model Lorenz {
const rho = 45.92
const beta = 4.0
const alpha = 16.0
state X, Y, Z
obs X_obs
sub initial {
X ~ log_normal(log(1.0), 0.00002)
Y ~ log_normal(log(1.0), 0.00002)
Z ~ log_normal(log(1.0), 0.00002)
}
sub transition(delta = 0.0001) {
ode {
dX/dt = alpha * (Y - X)
dY/dt = X * (rho - Z) - Y
dZ/dt = X * Y - beta * Z
}
}
sub observation {
X_obs ~ normal(X, 0.2)
}
}
"
# Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
# Lorenz <- libbi(Lorenz)
#
# T <- 0.2
# nObs <- 100
# init_parameters <- list(X = 1, Y = 1, Z = 1)
#
#
# synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,
#                                          init=init_parameters,
#                                          noutputs = nObs)
Lorenz <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
T <- 0.2
nObs <- 100
init_parameters <- list(X = 1, Y = 1, Z = 1)
bi <- libbi(model=Lorenz, end_time=T)
rewrite(bi)
synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz, init=init_parameters,noutputs = nObs)
model Lorenz {
model Lorenz {
model_file_name <- "Lorenz.bi"
Lorenz <- bi_model(model_file_name)
getwd()
setwd("/Users/mollycui/Desktop/R script/Research 10-Epid PMCMC")
model_file_name <- "Lorenz.bi"
Lorenz <- bi_model(model_file_name)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
model_file_name <- "Lorenz.bi"
Lorenz <- bi_model(model_file_name)
T <- 0.2
nObs <- 100
init_parameters <- list(X = 1, Y = 1, Z = 1)
synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,
init=init_parameters,
noutputs = nObs)
model_file_name <- "Lorenz.bi"
Lorenz <- bi_model(model_file_name)
T <- 0.2
nObs <- 100
# init_parameters <- list(X = 1, Y = 1, Z = 1)
synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,noutputs = nObs)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
model_str <- "
model h1n1bm {
obs y
const k = 1.59
const gamma = 1.08
const sigma = 0.07
const tau = 0.1
const N = 52196381
state S
state E
state I
state R
state x
state Z
sub initial {
S <- 50318612.9
E <- 257.6
I <- 4484.3
R <- 1873026.1
x <- 0
}
sub transition(delta = 1) {
noise e
e ~ wiener()
ode {
dx/dt = sigma*e
dS/dt = -exp(x)*S*I/N
dE/dt = exp(x)*S*I/N - E/k
dI/dt = E/k-I/gamma
dR/dt = I/gamma
dZ/dt = E/k
}
}
sub observation {
y ~ log_normal(log(max(Z/5, 0)), tau)
}
}"
model <- bi_model(lines = stringi::stri_split_lines(model_str)[[1]])
bi_model <- libbi(model)
T <- 365
synthetic_dataset <- bi_generate_dataset(end_time=365, model=bi_model)
model_file_name <- "Lorenz.bi"
Lorenz <- bi_model(model_file_name)
T <- 0.2
nObs <- 100
# init_parameters <- list(X = 1, Y = 1, Z = 1)
synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,noutputs = nObs)
View(bi_model)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
model_file_name <- "Lorenz.bi"
Lorenz <- bi_model(model_file_name)
T <- 0.2
nObs <- 100
# init_parameters <- list(X = 1, Y = 1, Z = 1)
synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,noutputs = nObs)
model_file_name <- "Lorenz.bi"
Lorenz <- bi_model(model_file_name)
# T <- 0.2
# nObs <- 100
# init_parameters <- list(X = 1, Y = 1, Z = 1)
synthetic_dataset <- bi_generate_dataset(end_time=0.2, model=Lorenz,noutputs = 100)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(pander)
library(lubridate)
library(latex2exp)
library(rbi)
library(rbi.helpers)
model_file_name <- "Lorenz.bi"
Lorenz <- bi_model(model_file_name)
synthetic_dataset <- bi_generate_dataset(end_time=0.2, model=Lorenz,noutputs = 100)
synthetic_dataset <- bi_generate_dataset(end_time=0.2, model=Lorenz)
synthetic_dataset <- bi_generate_dataset(endtime=0.2, model=Lorenz,noutputs = 100)
synthetic_dataset <- bi_generate_dataset(endtime=0.2, model=Lorenz,add_options = list(noutputs=100))
synthetic_dataset <- bi_generate_dataset(endtime=0.2,
model=Lorenz,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=100))
T <- 0.2
nObs <- 100
init_parameters <- list(X = 1, Y = 1, Z = 1)
synthetic_dataset <- bi_generate_dataset(end_time=T, model=Lorenz,
init=init_parameters,
noutputs = nObs)
endTime <- 50
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
install.packages("devtools")
library(devtools)
install_github("sbfnk/RBi",ref="master")
rm(list = ls(all.names=TRUE))
unlink(".RData")
library('RBi')
install_github("sbfnk/rbi",ref="master")
install_github("sbfnk/rbi.helpers",ref="master")
rm(list = ls(all.names=TRUE))
unlink(".RData")
library('rbi')
try(detach(package:rbi, unload = TRUE), silent = TRUE)
library(rbi, quietly = TRUE)
library('rbi.helpers')
library('ggplot2', quietly = TRUE)
library('gridExtra', quietly = TRUE)
endTime <- 50
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500),...)
rm(list=ls())
library(rbi)
library(rbi.helpers)
endTime <- 50
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500),...)
endTime <- 50
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
endTime <- 50
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- rbi::bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
library('rbi')
try(detach(package:rbi, unload = TRUE), silent = TRUE)
library(rbi, quietly = TRUE)
library('rbi.helpers')
library('ggplot2', quietly = TRUE)
library('gridExtra', quietly = TRUE)
endTime <- 50
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- rbi::bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
rm("c")
c
rm()
library('rbi')
try(detach(package:rbi, unload = TRUE), silent = TRUE)
library(rbi, quietly = TRUE)
library('rbi.helpers')
library('ggplot2', quietly = TRUE)
library('gridExtra', quietly = TRUE)
endTime <- 50
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- rbi::bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
library('rbi')
try(detach(package:rbi, unload = TRUE), silent = TRUE)
library(rbi, quietly = TRUE)
library('rbi.helpers')
library('ggplot2', quietly = TRUE)
library('gridExtra', quietly = TRUE)
endTime <- 50
PP <- bi_model("ecology.bi")
synthetic_dataset_PP <- rbi::bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
synthetic_dataset_PP <- rbi::bi_generate_dataset(endtime=endTime,
model=PP,
seed="42",
verbose=TRUE,
add_options = list(
noutputs=500))
